Given a binary search tree, write a function to find the kth smallest element in the tree.

Example :

Input : 
  2
 / \
1   3

and k = 2

Return : 2

As 2 is the second smallest element in the tree.


/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
int Solution::kthsmallest(TreeNode* A, int B) {
    stack<TreeNode*> s;
    TreeNode* temp=A;
    int i=0;
    if(A==NULL)
        return 0;
    while(!s.empty() || temp)
        if(temp){
            s.push(temp);
            temp=temp->left;
        }else{
            TreeNode *cur=s.top();
            s.pop();
            i++;
            if(i==B)
                return cur->val;
            temp=cur->right;
        }
}
