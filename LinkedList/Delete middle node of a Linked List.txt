Given a singly linked list, delete middle of the linked list.

For example, if given linked list is 1->2->3->4->5 then linked list should be modified to 1->2->4->5

If there are even nodes, then there would be two middle nodes, we need to delete the second middle element.

For example, if given linked list is 1->2->3->4->5->6 then it should be modified to 1->2->3->5->6.

Return the head of the linked list after removing the middle node.


/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
ListNode* Solution::solve(ListNode* A) {
    if(A==NULL)
        return NULL;
    if(A->next==NULL){
        delete(A);
        return NULL;
    }
    ListNode *p1=A,*p2=A,*prev=NULL;
    while(p2 && p2->next){
        prev=p1;
        p1=p1->next;
        p2=p2->next->next;
    }
    prev->next=p1->next;
    return A;
}
