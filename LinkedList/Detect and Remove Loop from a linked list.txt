Given a linked list which contains some loop.

You need to find the node, which creates a loop, and break it by making the node point to NULL.

INPUT

3 -> 2 -> 4 -> 5 -> 6
          ^         |
          |         |    
          - - - - - -

OUTPUT

3 -> 2 -> 4 -> 5 -> 6 -> NULL


/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
ListNode* Solution::solve(ListNode* A) {
    if(A==NULL)
        return NULL;
    if(A->next==A){
        A->next=NULL;
        return A;
    }    
    ListNode *p1=A,*p2=A,*prev=NULL;
    while(p1 && p2 && p2->next){
        p1=p1->next;
        p2=p2->next->next;
        if(p1==p2)
            break;
    }
    p1=A;
    while(p1!=p2){
        prev=p2;
        p1=p1->next;
        p2=p2->next;
    }
    prev->next=NULL;
    return A;
}
